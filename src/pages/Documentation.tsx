import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { 
  BookOpen, 
  FileText, 
  Search, 
  Plus, 
  Download,
  RefreshCw,
  Zap,
  Code,
  Database,
  Globe,
  Settings
} from 'lucide-react';

export function Documentation() {
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('all');

  const categories = [
    { id: 'all', name: 'All Documentation', icon: BookOpen },
    { id: 'api', name: 'API Reference', icon: Code },
    { id: 'database', name: 'Database Schema', icon: Database },
    { id: 'frontend', name: 'Frontend Components', icon: Globe },
    { id: 'config', name: 'Configuration', icon: Settings },
  ];

  const documents = [
    {
      id: 1,
      title: 'User Authentication API',
      category: 'api',
      description: 'Complete API documentation for user authentication endpoints including JWT token management.',
      lastUpdated: '2 hours ago',
      autoGenerated: true,
      status: 'up-to-date',
      coverage: 95
    },
    {
      id: 2,
      title: 'Database Schema Documentation',
      category: 'database',
      description: 'Comprehensive database schema documentation with relationships and constraints.',
      lastUpdated: '1 day ago',
      autoGenerated: true,
      status: 'up-to-date',
      coverage: 88
    },
    {
      id: 3,
      title: 'React Component Library',
      category: 'frontend',
      description: 'Documentation for all reusable React components with props and usage examples.',
      lastUpdated: '3 hours ago',
      autoGenerated: true,
      status: 'up-to-date',
      coverage: 92
    },
    {
      id: 4,
      title: 'Environment Configuration',
      category: 'config',
      description: 'Setup and configuration guide for different environments (dev, staging, production).',
      lastUpdated: '5 days ago',
      autoGenerated: false,
      status: 'needs-update',
      coverage: 76
    },
    {
      id: 5,
      title: 'Payment Processing API',
      category: 'api',
      description: 'Integration guide for payment processing with Stripe and PayPal.',
      lastUpdated: '1 week ago',
      autoGenerated: true,
      status: 'outdated',
      coverage: 82
    }
  ];

  const filteredDocuments = documents.filter(doc => {
    const matchesSearch = doc.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         doc.description.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesCategory = selectedCategory === 'all' || doc.category === selectedCategory;
    return matchesSearch && matchesCategory;
  });

  const getStatusColor = (status) => {
    switch (status) {
      case 'up-to-date': return 'bg-green-100 text-green-800';
      case 'needs-update': return 'bg-yellow-100 text-yellow-800';
      case 'outdated': return 'bg-red-100 text-red-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold text-gray-900">Documentation Hub</h1>
          <p className="text-gray-600 mt-1">AI-powered documentation generation and management</p>
        </div>
        <div className="flex items-center space-x-3">
          <button className="border border-gray-300 text-gray-700 px-4 py-2 rounded-lg font-medium hover:bg-gray-50 transition-all duration-200 flex items-center">
            <RefreshCw className="w-4 h-4 mr-2" />
            Sync All
          </button>
          <button className="bg-gradient-to-r from-indigo-500 to-purple-600 text-white px-4 py-2 rounded-lg font-medium hover:shadow-lg transition-all duration-200 flex items-center">
            <Plus className="w-4 h-4 mr-2" />
            Generate Docs
          </button>
        </div>
      </div>

      {/* Stats */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <div className="bg-white p-6 rounded-xl shadow-sm border border-gray-200">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Total Documents</p>
              <p className="text-3xl font-bold text-gray-900 mt-2">24</p>
            </div>
            <FileText className="w-8 h-8 text-blue-500" />
          </div>
        </div>
        <div className="bg-white p-6 rounded-xl shadow-sm border border-gray-200">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Auto-Generated</p>
              <p className="text-3xl font-bold text-gray-900 mt-2">18</p>
            </div>
            <Zap className="w-8 h-8 text-indigo-500" />
          </div>
        </div>
        <div className="bg-white p-6 rounded-xl shadow-sm border border-gray-200">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Avg Coverage</p>
              <p className="text-3xl font-bold text-gray-900 mt-2">87%</p>
            </div>
            <BookOpen className="w-8 h-8 text-green-500" />
          </div>
        </div>
        <div className="bg-white p-6 rounded-xl shadow-sm border border-gray-200">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Need Updates</p>
              <p className="text-3xl font-bold text-gray-900 mt-2">3</p>
            </div>
            <RefreshCw className="w-8 h-8 text-yellow-500" />
          </div>
        </div>
      </div>

      {/* Search and Filters */}
      <div className="bg-white p-6 rounded-xl shadow-sm border border-gray-200">
        <div className="flex flex-col md:flex-row md:items-center md:justify-between space-y-4 md:space-y-0">
          <div className="relative flex-1 max-w-md">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
            <input
              type="text"
              placeholder="Search documentation..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-200"
            />
          </div>
          
          <div className="flex space-x-2">
            {categories.map((category) => (
              <button
                key={category.id}
                onClick={() => setSelectedCategory(category.id)}
                className={`px-4 py-2 rounded-lg font-medium transition-all duration-200 flex items-center ${
                  selectedCategory === category.id
                    ? 'bg-gradient-to-r from-indigo-500 to-purple-600 text-white'
                    : 'text-gray-600 hover:bg-gray-100'
                }`}
              >
                <category.icon className="w-4 h-4 mr-2" />
                {category.name}
              </button>
            ))}
          </div>
        </div>
      </div>

      {/* Documentation List */}
      <div className="grid gap-6">
        {filteredDocuments.map((doc, index) => (
          <motion.div
            key={doc.id}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.4, delay: index * 0.1 }}
            className="bg-white p-6 rounded-xl shadow-sm border border-gray-200 hover:shadow-md transition-all duration-200"
          >
            <div className="flex items-start justify-between">
              <div className="flex-1">
                <div className="flex items-center space-x-3 mb-2">
                  <h3 className="text-lg font-semibold text-gray-900">{doc.title}</h3>
                  {doc.autoGenerated && (
                    <div className="flex items-center px-2 py-1 bg-indigo-100 text-indigo-800 rounded-full text-xs font-medium">
                      <Zap className="w-3 h-3 mr-1" />
                      AI Generated
                    </div>
                  )}
                  <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(doc.status)}`}>
                    {doc.status.replace('-', ' ')}
                  </span>
                </div>
                
                <p className="text-gray-600 mb-4">{doc.description}</p>
                
                <div className="flex items-center space-x-6 text-sm text-gray-500">
                  <span>Last updated: {doc.lastUpdated}</span>
                  <div className="flex items-center">
                    <span className="mr-2">Coverage: {doc.coverage}%</span>
                    <div className="w-16 h-2 bg-gray-200 rounded-full">
                      <div 
                        className={`h-2 rounded-full ${
                          doc.coverage >= 90 ? 'bg-green-500' : 
                          doc.coverage >= 80 ? 'bg-yellow-500' : 'bg-red-500'
                        }`}
                        style={{ width: `${doc.coverage}%` }}
                      ></div>
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="flex items-center space-x-2 ml-6">
                <button className="p-2 text-gray-400 hover:text-indigo-600 transition-colors duration-200">
                  <Download className="w-5 h-5" />
                </button>
                <button className="p-2 text-gray-400 hover:text-indigo-600 transition-colors duration-200">
                  <RefreshCw className="w-5 h-5" />
                </button>
                <button className="bg-gradient-to-r from-indigo-500 to-purple-600 text-white px-4 py-2 rounded-lg font-medium hover:shadow-lg transition-all duration-200">
                  View
                </button>
              </div>
            </div>
          </motion.div>
        ))}
      </div>

      {/* AI Documentation Generator */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.6, delay: 0.4 }}
        className="bg-gradient-to-r from-indigo-500 to-purple-600 p-8 rounded-xl text-white"
      >
        <div className="flex items-center justify-between">
          <div>
            <h3 className="text-2xl font-bold mb-2">AI Documentation Generator</h3>
            <p className="text-indigo-100 mb-4">
              Automatically generate comprehensive documentation from your codebase using advanced AI analysis.
            </p>
            <ul className="space-y-2 text-indigo-100">
              <li className="flex items-center">
                <Zap className="w-4 h-4 mr-2" />
                Analyzes code structure and comments
              </li>
              <li className="flex items-center">
                <Zap className="w-4 h-4 mr-2" />
                Generates API documentation automatically
              </li>
              <li className="flex items-center">
                <Zap className="w-4 h-4 mr-2" />
                Creates usage examples and guides
              </li>
            </ul>
          </div>
          <div className="text-center">
            <button className="bg-white text-indigo-600 px-6 py-3 rounded-lg font-medium hover:shadow-lg transition-all duration-200 flex items-center">
              <Zap className="w-5 h-5 mr-2" />
              Generate Now
            </button>
          </div>
        </div>
      </motion.div>
    </div>
  );
}